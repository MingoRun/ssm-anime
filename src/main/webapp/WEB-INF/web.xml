<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns="http://xmlns.jcp.org/xml/ns/javaee"
     xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
     http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
     id="WebApp_ID" version="3.1">
     <!-- 配置加载Spring文件的监听器 -->
     <context-param>
         <param-name>contextConfigLocation</param-name>
         <param-value>classpath*:spring/applicationContext*.xml</param-value>
     </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 自定义前台过滤器 -->
    <filter>
    	<filter-name>URLfilter</filter-name>
    	<filter-class>cn.edu.hstc.core.filter.URLFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>URLfilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 自定义后台过滤器 -->
    <!-- <filter>
    	<filter-name>adminFilter</filter-name>
    	<filter-class>cn.edu.hstc.core.filter.AdminFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>adminFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping> -->
    <!-- 编码过滤器  -->
    <filter>
        <filter-name>encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <!-- 编码过滤器mapping -->
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
     <!-- shiro过滤器，DelegatingFilterProxy通过代理模式将spring容器中的bean和filter关联起来 -->
    <filter>
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <!-- 设置true由servlet容器控制filter的生命周期 -->
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	    <!-- 设置spring容器filter的bean id,如果不设置则找与filter-name一致的bean -->
	    <init-param>
	        <param-name>targetBeanName</param-name>
	        <param-value>shiroFilter</param-value>
	    </init-param>
	</filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- 配置Spring MVC前端核心控制器  -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc/springmvc-config.xml</param-value>
        </init-param>
        <!-- 配置服务器启动后立即加载Spring MVC配置文件 -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- 设置session有效期   -->
    <session-config>
    	<session-timeout>60</session-timeout>
    </session-config>
     <!-- 验证码相关属性的配置 -->
	<servlet>
	    <servlet-name>Kaptcha</servlet-name>
	    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
	    <!-- 定义 Kaptcha 的样式 -->
	    <!-- 是否有边框 -->
	    <init-param>
	        <param-name>kaptcha.border</param-name>
	        <param-value>no</param-value>
	    </init-param>
	    <!-- 字体颜色 -->
	    <init-param>
	        <param-name>kaptcha.textproducer.font.color</param-name>
	        <param-value>red</param-value>
	    </init-param>
	    <!-- 图片宽度 -->
	    <init-param>
	        <param-name>kaptcha.image.width</param-name>
	        <param-value>130</param-value>
	    </init-param>
	    <!-- 图片高度 -->
	    <init-param>
	        <param-name>kaptcha.image.height</param-name>
	        <param-value>48</param-value>
	    </init-param>
	    <!-- 使用哪些字符生成验证码 -->
	    <init-param>
	        <param-name>kaptcha.textproducer.char.string</param-name>
	        <param-value>ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789</param-value>
	    </init-param>
	    <!-- 字体大小 -->
	    <init-param>
	        <param-name>kaptcha.textproducer.font.size</param-name>
	        <param-value>35</param-value>
	    </init-param>
	    <!-- 干扰线的颜色 -->
	    <init-param>
	        <param-name>kaptcha.noise.color</param-name>
	        <param-value>black</param-value>
	    </init-param>
	    <!-- 字符个数 -->
	    <init-param>
	        <param-name>kaptcha.textproducer.char.length</param-name>
	        <param-value>4</param-value>
	    </init-param>
	    <!-- 字体 -->
	    <init-param>
	        <param-name>kaptcha.textproducer.font.names</param-name>
	        <param-value>Arial</param-value>
	    </init-param>
	    <init-param>
			<description>session中存放验证码的key键</description>
			<param-name>kaptcha.session.key</param-name>
			<param-value>KAPTCHA_SESSION_KEY</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
	    <servlet-name>Kaptcha</servlet-name>
	    <!-- 外部访问路径 -->
	    <url-pattern>/Kaptcha</url-pattern>
	</servlet-mapping>
    
    <!-- 欢迎页面 -->
    <welcome-file-list>
        <!-- <welcome-file>/jsp/bgsystem/admin/index.jsp</welcome-file> -->
        <welcome-file>/jsp/bgsystem/login.jsp</welcome-file>
    </welcome-file-list>
</web-app>